#Global Score

getCountMfxSsin=SELECT COUNT(DISTINCT(ssin)) FROM mfx_payment WHERE id_batch_payment = :batchId;
getCountSsinWithDiff=SELECT COUNT(*) FROM mfx_payment p LEFT JOIN loic_payment l ON p.id_batch_payment = l.id_batch_payment AND p.ssin = l.ssin AND p.ref_month = l.ref_month left join citizen_reporting r on r.ssin = l.ssin and r.ref_month = l.ref_month WHERE ((l.gross_amount_paid - p.gross_amount_paid) < -0.05 OR (l.gross_amount_paid - p.gross_amount_paid) > 0.05 OR (l.net_paid - p.net_paid) < -0.05 OR (l.net_paid - p.net_paid) > 0.05 OR l.ssin IS NULL) AND p.id_batch_payment = :batchId and COALESCE(r.ignored, 0) != 1;
getSsinWithDiff=SELECT DISTINCT p.ssin FROM mfx_payment p LEFT JOIN loic_payment l ON p.id_batch_payment = l.id_batch_payment AND p.ssin = l.ssin AND p.ref_month = l.ref_month AND l.id_batch_payment = :batchId WHERE (l.gross_amount_paid - p.gross_amount_paid) < -0.05 OR (l.gross_amount_paid - p.gross_amount_paid) > 0.05 OR (l.net_paid - p.net_paid) < -0.05 OR (l.net_paid - p.net_paid) > 0.05 OR l.ssin IS NULL;

#Critère 1 : Match Payment Citizen

getPaymentCountDistinctSSINFromLoic=select count(distinct(ssin)) from loic_payment where id_batch_payment = :batchId;
getPaymentCountDistinctSSINFromMfx=select count(distinct(ssin)) from mfx_payment where id_batch_payment = :batchId;
getPaymentCountExcluSSINFromLoic=select count(distinct ssin) from loic_payment l where id_batch_payment = :batchId and not exists (select 1 from mfx_payment m where m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin);
getPaymentCountExcluSSINFromMfx=select count(distinct ssin) from mfx_payment l where id_batch_payment = :batchId and not exists (select 1 from loic_payment m where m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin);
getPaymentExcluSSINFromLoic=select l.ssin, l.citizen_name, l.ref_month, l.gross_amount_paid, l.withholding_tax_amount_paid, l.net_paid, l.recov_gross_amount, l.recov_net_amount, l.payscale,l.competent_entity, l.leave_type, l.interruption_regime, r.labels, r.ignored from loic_payment l left join citizen_reporting r on r.ssin = l.ssin and r.ref_month = l.ref_month where id_batch_payment = :batchId and not exists (select 1 from mfx_payment m where m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin)

#Critère 2 : Match Payment Plan

getPaymentCountPlanFromLoic=select count(*) from loic_payment where id_batch_payment = :batchId;
getPaymentCountPlanFromMfx=select count(*) from mfx_payment where id_batch_payment = :batchId;
getPaymentCountMatchPlan=select count(*) from mfx_payment l where id_batch_payment = :batchId and exists (select 1 from loic_payment m where m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month);


# Critère 3 : Payment Gross Amount

getPaymentCountGrossAmountMatch=select count(*) from mfx_payment m JOIN (SELECT * FROM loic_payment WHERE id_batch_payment = :batchId) l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month where m.gross_amount_paid = l.gross_amount_paid;
getPaymentCountNetAmountMatch=select count(*) from mfx_payment m JOIN (SELECT * FROM loic_payment WHERE id_batch_payment = :batchId) l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month where m.net_paid = l.net_paid;
getPaymentCountGrossAmountDiff=select count(*) from mfx_payment m JOIN (SELECT * FROM loic_payment WHERE id_batch_payment = :batchId) l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month where ((l.gross_amount_paid - m.gross_amount_paid) BETWEEN :intervalLowUp AND :intervalHighUp OR (l.gross_amount_paid - m.gross_amount_paid) BETWEEN :intervalHighDown AND :intervalLowDown);
getPaymentCountNetAmountDiff=select count(*) from mfx_payment m JOIN (SELECT * FROM loic_payment WHERE id_batch_payment = :batchId) l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month where ((l.net_paid - m.net_paid) BETWEEN :intervalLowUp AND :intervalHighUp OR (l.net_paid - m.net_paid) BETWEEN :intervalHighDown AND :intervalLowDown);

getCitizenPaymentGrossAmountDiff=select l.ssin, l.ref_month, l.gross_amount_paid as loic_gross_amount_paid, m.gross_amount_paid as mfx_gross_amount_paid, l.leave_type, l.interruption_regime, r.labels, r.ignored from mfx_payment m join loic_payment l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month left join  citizen_reporting r on r.ssin= l.ssin and r.ref_month = l.ref_month where l.id_batch_payment = :batchId and ((l.gross_amount_paid - m.gross_amount_paid) BETWEEN :intervalLowUp AND :intervalHighUp OR (l.gross_amount_paid - m.gross_amount_paid) BETWEEN :intervalHighDown AND :intervalLowDown)
getCitizenPaymentNetAmountDiff=select l.ssin, l.ref_month, l.net_paid as loic_net_amount_paid, m.net_paid as mfx_net_amount_paid, l.leave_type, l.interruption_regime, r.labels, r.ignored from mfx_payment m join loic_payment l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month left join  citizen_reporting r on r.ssin= l.ssin and r.ref_month = l.ref_month where l.id_batch_payment = :batchId and ((l.net_paid - m.net_paid) BETWEEN :intervalLowUp AND :intervalHighUp OR (l.net_paid - m.net_paid) BETWEEN :intervalHighDown AND :intervalLowDown)


#Critère 4 : Match Recovery Citizen
getRecoveryCountDistinctSSINFromLoic=select count(distinct(ssin)) from loic_recovery where id_batch_payment = :batchId;
getRecoveryCountDistinctSSINFromMfx=select count(distinct(ssin)) from mfx_recovery where id_batch_payment = :batchId;
getRecoveryCountExcluSSINFromLoic=select count(distinct ssin) from loic_recovery l where id_batch_payment = :batchId and not exists (select 1 from mfx_recovery m where m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin);
getRecoveryCountExcluSSINFromMfx=select count(distinct ssin) from mfx_recovery l where id_batch_payment = :batchId and not exists (select 1 from loic_recovery m where m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin);
getRecoveryExcluSSINFromLoic=select l.ssin, l.citizen_name, l.ref_month, l.gross_amount as recov_gross_amount, l.net_amount as recov_net_amount,l.competent_entity, r.labels, r.ignored from loic_recovery l left join citizen_reporting r on r.ssin = l.ssin and r.ref_month = l.ref_month where id_batch_payment = :batchId and not exists (select 1 from mfx_recovery m where m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin)

#Critère 5 : Match Recovery Plan

getRecoveryCountPlanFromLoic=select count(*) from loic_recovery where id_batch_payment = :batchId;
getRecoveryCountPlanFromMfx=select count(*) from mfx_recovery where id_batch_payment = :batchId;
getRecoveryCountMatchPlan=select count(*) from mfx_recovery l where id_batch_payment = :batchId and exists (select 1 from loic_recovery m where m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month);

# Critère 6 : Payment Gross Amount

getRecoveryCountGrossAmountMatch=select count(*) from mfx_recovery m join loic_recovery l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month where l.id_batch_payment = :batchId and m.gross_amount = l.gross_amount;
getRecoveryCountNetAmountMatch=select count(*) from mfx_recovery m join loic_recovery l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month where l.id_batch_payment = :batchId and m.net_amount = l.net_amount;
getRecoveryCountGrossAmountDiff=select count(*) from mfx_recovery m join loic_recovery l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month where l.id_batch_payment = :batchId and ((l.gross_amount - m.gross_amount) BETWEEN :intervalLowUp AND :intervalHighUp OR (l.gross_amount - m.gross_amount) BETWEEN :intervalHighDown AND :intervalLowDown);
getRecoveryCountNetAmountDiff=select count(*) from mfx_recovery m join loic_recovery l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month where l.id_batch_payment = :batchId and ((l.net_amount - m.net_amount) BETWEEN :intervalLowUp AND :intervalHighUp OR (l.net_amount - m.net_amount) BETWEEN :intervalHighDown AND :intervalLowDown);

getCitizenRecoveryGrossAmountDiff=select l.ssin, l.ref_month, l.gross_amount as loic_gross_amount_paid, m.gross_amount as mfx_gross_amount_paid, r.labels, r.ignored from mfx_recovery m join loic_recovery l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month left join  citizen_reporting r on r.ssin= l.ssin and r.ref_month = l.ref_month where l.id_batch_payment = :batchId and ((l.gross_amount - m.gross_amount) BETWEEN :intervalLowUp AND :intervalHighUp OR (l.gross_amount - m.gross_amount) BETWEEN :intervalHighDown AND :intervalLowDown)
getCitizenRecoveryNetAmountDiff=select l.ssin, l.ref_month, l.net_amount as loic_net_amount_paid, m.net_amount as mfx_net_amount_paid, r.labels, r.ignored from mfx_recovery m join loic_recovery l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month left join  citizen_reporting r on r.ssin= l.ssin and r.ref_month = l.ref_month where l.id_batch_payment = :batchId and ((l.net_amount - m.net_amount) BETWEEN :intervalLowUp AND :intervalHighUp OR (l.net_amount - m.net_amount) BETWEEN :intervalHighDown AND :intervalLowDown)

# Critère 6 : Payment Gross Amount
