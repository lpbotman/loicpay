#Global Score

getCountMfxSsin=SELECT COUNT(DISTINCT(ssin)) FROM mfx_payment WHERE id_batch_payment = :batchId;
getCountSsinWithDiff=SELECT COUNT(*) FROM mfx_payment p LEFT JOIN loic_payment l ON p.id_batch_payment = l.id_batch_payment AND p.ssin = l.ssin AND p.ref_month = l.ref_month WHERE ((l.gross_amount_paid - p.gross_amount_paid) < -0.05 OR (l.gross_amount_paid - p.gross_amount_paid) > 0.05 OR (l.net_paid - p.net_paid) < -0.05 OR (l.net_paid - p.net_paid) > 0.05 OR l.ssin IS NULL) AND p.id_batch_payment = :batchId ;
getSsinWithDiff=SELECT DISTINCT p.ssin FROM mfx_payment p LEFT JOIN loic_payment l ON p.id_batch_payment = l.id_batch_payment AND p.ssin = l.ssin AND p.ref_month = l.ref_month AND l.id_batch_payment = :batchId WHERE (l.gross_amount_paid - p.gross_amount_paid) < -0.05 OR (l.gross_amount_paid - p.gross_amount_paid) > 0.05 OR (l.net_paid - p.net_paid) < -0.05 OR (l.net_paid - p.net_paid) > 0.05 OR l.ssin IS NULL;

#Critère 1 : Match Citizen

getCountDistinctSSINFromLoic=select count(distinct(ssin)) from loic_payment where id_batch_payment = :batchId;
getCountDistinctSSINFromMfx=select count(distinct(ssin)) from mfx_payment where id_batch_payment = :batchId;
getCountExcluSSINFromLoic=select count(distinct ssin) from loic_payment l where id_batch_payment = :batchId and not exists (select 1 from mfx_payment m where m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin);
getCountExcluSSINFromMfx=select count(distinct ssin) from mfx_payment l where id_batch_payment = :batchId and not exists (select 1 from loic_payment m where m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin);

#Critère 2 : Match PaymentPlan

getCountPaymentPlanFromLoic=select count(*) from loic_payment where id_batch_payment = :batchId;
getCountPaymentPlanFromMfx=select count(*) from mfx_payment where id_batch_payment = :batchId;
getCountMatchPaymentPlan=select count(*) from mfx_payment l where id_batch_payment = :batchId and exists (select 1 from loic_payment m where m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month);


# Critère 3 : Gross Amount

getCountGrossAmountMatch=select count(*) from mfx_payment m join loic_payment l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month where l.id_batch_payment = :batchId and m.gross_amount_paid = l.gross_amount_paid;
getCountNetAmountMatch=select count(*) from mfx_payment m join loic_payment l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month where l.id_batch_payment = :batchId and m.net_paid = l.net_paid;
getCountGrossAmountDiff=select count(*) from mfx_payment m join loic_payment l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month where l.id_batch_payment = :batchId and ((l.gross_amount_paid - m.gross_amount_paid) BETWEEN :intervalLowUp AND :intervalHighUp OR (l.gross_amount_paid - m.gross_amount_paid) BETWEEN :intervalHighDown AND :intervalLowDown);
getCountNetAmountDiff=select count(*) from mfx_payment m join loic_payment l on m.id_batch_payment = l.id_batch_payment and m.ssin = l.ssin and m.ref_month = l.ref_month where l.id_batch_payment = :batchId and ((l.net_paid - m.net_paid) BETWEEN :intervalLowUp AND :intervalHighUp OR (l.net_paid - m.net_paid) BETWEEN :intervalHighDown AND :intervalLowDown);
